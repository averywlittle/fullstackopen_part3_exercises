{"version":3,"sources":["components/ListContacts.js","components/ContactForm.js","components/FilterForm.js","services/persons.js","components/Notification.js","components/App.js","index.js"],"names":["ListContacts","props","persons","filter","person","name","includes","map","number","onClick","removeContact","ContactForm","value","newName","onChange","handleNameChange","newNumber","handleNumberChange","addContact","type","FilterForm","handleFilterChange","baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","Notification","message","className","App","useState","setPersons","setNewName","setNewNumber","setFilter","setMessage","useEffect","console","log","ContactsService","initialContacts","length","event","target","preventDefault","existingContact","find","window","confirm","updatedContact","returnedContact","setTimeout","concat","contact","status","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d507ca11.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst ListContacts = (props) => {\r\n\r\n    let persons = props.persons\r\n\r\n    if (props.filter !== '') {\r\n        persons = props.persons.filter(person => person.name.includes(props.filter))\r\n    }\r\n\r\n    let content = persons.map(person => <div key={person.name}>{person.name}, {person.number}<button onClick={() => props.removeContact(person)}>remove</button></div>)\r\n    return content\r\n}\r\n\r\nexport default ListContacts","import React from 'react'\r\n\r\nconst ContactForm = (props) => (\r\n    <form>\r\n        <div>\r\n            name: <input value={props.newName} onChange={props.handleNameChange}/>\r\n        </div>\r\n        <div>\r\n            number: <input value={props.newNumber} onChange={props.handleNumberChange}/>\r\n        </div>\r\n        <div>\r\n            <button onClick={props.addContact} type=\"submit\">add</button>\r\n        </div>\r\n    </form>\r\n)\r\n\r\nexport default ContactForm","import React from 'react'\r\n\r\nconst FilterForm = (props) => (\r\n    <div>\r\n        filter via text: <input value={props.filter} onChange={props.handleFilterChange}/>\r\n    </div>\r\n)\r\n\r\nexport default FilterForm","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response)\r\n}\r\n\r\nexport default {\r\n    getAll,\r\n    create,\r\n    update,\r\n    remove\r\n}","import React from 'react'\r\n\r\nconst Notification = ({ message }) => {\r\n    if (message === null) {\r\n      return null\r\n    }\r\n  \r\n    return (\r\n      <div className=\"message\">\r\n        {message}\r\n      </div>\r\n    )\r\n  }\r\n\r\nexport default Notification","import React, { useState, useEffect } from 'react'\r\nimport ListContacts from './ListContacts'\r\nimport ContactForm from './ContactForm'\r\nimport FilterForm from './FilterForm'\r\nimport ContactsService from '../services/persons'\r\nimport Notification from './Notification'\r\n\r\nconst App = () => {\r\n    \r\n  const [ persons, setPersons ] = useState([]) \r\n  const [ newName, setNewName ] = useState('')\r\n  const [ newNumber, setNewNumber] = useState('')\r\n  const [ filter, setFilter] = useState('')\r\n  const [ message, setMessage ] = useState(null)\r\n\r\n  useEffect(() => {\r\n    console.log('effect')\r\n\r\n    ContactsService\r\n      .getAll()\r\n      .then(initialContacts => {\r\n        console.log('promise fulfilled')\r\n        setPersons(initialContacts)\r\n      })\r\n  }, [])\r\n  console.log('render', persons.length, 'contacts')\r\n\r\n  const handleNameChange = (event) => {\r\n    setNewName(event.target.value)\r\n  }\r\n\r\n  const handleNumberChange = (event) => {\r\n    setNewNumber(event.target.value)\r\n  }\r\n\r\n  const handleFilterChange = (event) => {\r\n      setFilter(event.target.value)\r\n  }\r\n\r\n  const addContact = (event) => {\r\n    event.preventDefault()\r\n\r\n    const existingContact = persons.find(person => person.name === newName)\r\n\r\n    if (!existingContact) {\r\n\r\n        ContactsService\r\n          .create({ name: newName, number: newNumber })\r\n          .then(returnedContact => {\r\n\r\n            if (returnedContact) {\r\n              setPersons(persons.concat(returnedContact))\r\n              setNewNumber('')\r\n              setNewName('')\r\n\r\n              setMessage(\r\n                `'${returnedContact.name}' was added successfully!`\r\n              )\r\n              setTimeout(() => {\r\n                setMessage(null)\r\n              }, 4500)\r\n            }\r\n          })\r\n    }\r\n    else {\r\n        \r\n      let result = window.confirm(`${existingContact.name} already exists in the phonebook, update their number?`);\r\n\r\n      if (result) {\r\n\r\n        const updatedContact = { ...existingContact, number: newNumber}\r\n\r\n        ContactsService.update(existingContact.id, updatedContact)\r\n          .then(returnedContact => {\r\n\r\n            if (returnedContact) {\r\n\r\n              setPersons(persons.map(person => person.id !== returnedContact.id ? person : returnedContact))\r\n              setNewNumber('')\r\n              setNewName('')\r\n\r\n              setMessage(\r\n                `'${returnedContact.name}' was edited successfully!`\r\n              )\r\n              setTimeout(() => {\r\n                setMessage(null)\r\n              }, 4500)\r\n            }\r\n          })\r\n      }\r\n    }\r\n  }\r\n\r\n  const removeContact = (contact) => {\r\n\r\n    let result = window.confirm(`Are you sure you want to delete ${contact.name}`);\r\n\r\n    if (result) {\r\n      \r\n      ContactsService.remove(contact.id)\r\n      .then(response => {\r\n\r\n        if (response.status === 204) {\r\n          setPersons(persons.filter(person => person.id !== contact.id))\r\n          \r\n          setMessage(\r\n            `'${contact.name}' was removed successfully.`\r\n          )\r\n          setTimeout(() => {\r\n            setMessage(null)\r\n          }, 4500)\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n        <Notification message={message} />\r\n        <FilterForm filter={filter} handleFilterChange={handleFilterChange}/>\r\n      <h2>Add a new contact:</h2>\r\n        <ContactForm addContact={addContact} newName={newName} handleNameChange={handleNameChange} newNumber={newNumber} handleNumberChange={handleNumberChange}/>\r\n      <h2>Numbers</h2>\r\n        <ListContacts persons={persons} filter={filter} removeContact={removeContact}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}